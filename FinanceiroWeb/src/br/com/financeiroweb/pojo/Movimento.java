package br.com.financeiroweb.pojo;
// default package
// Generated 28/09/2014 14:04:16 by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Movimento generated by hbm2java
 */
@Entity
@Table(name = "movimento", catalog = "financeiroweb")
public class Movimento implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private CondicaoDePagamento condicaoDePagamento;
	private ClienteFornecedor clienteFornecedor;
	private ContaContabil contaContabil;
	private boolean liquidado;
	private boolean tipo;
	private long valor;
	private Date vencimento;
	private Set<ContaBancaria> contaBancarias = new HashSet<ContaBancaria>(0);

	public Movimento() {
	}

	public Movimento(CondicaoDePagamento condicaoDePagamento,
			ClienteFornecedor clienteFornecedor, ContaContabil contaContabil,
			boolean liquidado, boolean tipo, long valor, Date vencimento) {
		this.condicaoDePagamento = condicaoDePagamento;
		this.clienteFornecedor = clienteFornecedor;
		this.contaContabil = contaContabil;
		this.liquidado = liquidado;
		this.tipo = tipo;
		this.valor = valor;
		this.vencimento = vencimento;
	}

	public Movimento(CondicaoDePagamento condicaoDePagamento,
			ClienteFornecedor clienteFornecedor, ContaContabil contaContabil,
			boolean liquidado, boolean tipo, long valor, Date vencimento,
			Set<ContaBancaria> contaBancarias) {
		this.condicaoDePagamento = condicaoDePagamento;
		this.clienteFornecedor = clienteFornecedor;
		this.contaContabil = contaContabil;
		this.liquidado = liquidado;
		this.tipo = tipo;
		this.valor = valor;
		this.vencimento = vencimento;
		this.contaBancarias = contaBancarias;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "condicao_de_pagamento_id", nullable = false)
	public CondicaoDePagamento getCondicaoDePagamento() {
		return this.condicaoDePagamento;
	}

	public void setCondicaoDePagamento(CondicaoDePagamento condicaoDePagamento) {
		this.condicaoDePagamento = condicaoDePagamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cliente_fornecedor_id", nullable = false)
	public ClienteFornecedor getClienteFornecedor() {
		return this.clienteFornecedor;
	}

	public void setClienteFornecedor(ClienteFornecedor clienteFornecedor) {
		this.clienteFornecedor = clienteFornecedor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "conta_contabil_id", nullable = false)
	public ContaContabil getContaContabil() {
		return this.contaContabil;
	}

	public void setContaContabil(ContaContabil contaContabil) {
		this.contaContabil = contaContabil;
	}

	@Column(name = "liquidado", nullable = false)
	public boolean isLiquidado() {
		return this.liquidado;
	}

	public void setLiquidado(boolean liquidado) {
		this.liquidado = liquidado;
	}

	@Column(name = "tipo", nullable = false)
	public boolean isTipo() {
		return this.tipo;
	}

	public void setTipo(boolean tipo) {
		this.tipo = tipo;
	}

	@Column(name = "valor", nullable = false, precision = 10, scale = 0)
	public long getValor() {
		return this.valor;
	}

	public void setValor(long valor) {
		this.valor = valor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "vencimento", nullable = false, length = 19)
	public Date getVencimento() {
		return this.vencimento;
	}

	public void setVencimento(Date vencimento) {
		this.vencimento = vencimento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "movimento")
	public Set<ContaBancaria> getContaBancarias() {
		return this.contaBancarias;
	}

	public void setContaBancarias(Set<ContaBancaria> contaBancarias) {
		this.contaBancarias = contaBancarias;
	}

}
